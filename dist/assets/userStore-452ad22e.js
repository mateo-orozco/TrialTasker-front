import{d as a,a as r,N as t}from"./index-2ad15a8c.js";const i=a("users",{state:()=>({usersStoreOnline:[],usersStoreAll:[],usersStore:[],userStore:{},errorsStore:[],messagesStore:[]}),getters:{usersOnline:s=>s.usersStoreOnline,usersAll:s=>s.usersStoreAll,users:s=>s.usersStore,user:s=>s.userStore,errors:s=>s.errorsStore,messages:s=>s.messagesStore},actions:{async getUsers(){await r.get("/api/users").then(s=>{this.usersStore=s.data,console.log(s.data)})},async getUsersAll(){await r.get("/api/users/all").then(s=>{this.usersStoreAll=s.data})},async getUsersPage(s){await r.get(s).then(e=>{this.usersStore=e.data})},async getUser(s){await r.get("/api/users/"+s).then(e=>{this.userStore=e.data})},async createUser(s){await r.post("/api/users",s).then(e=>{this.messagesStore=e.data,this.getUsers(),t.push({name:"UserDashboard"})}).catch(e=>{this.errorsStore=e.response.data.errors})},async updateUser(s){await r.put("/api/users/"+s.id,s).then(e=>{this.messagesStore=e.data,this.getUsers(),t.push({name:"UserDashboard"})}).catch(e=>{this.errorsStore=e.response.data.errors})},async deleteUser(s){await r.delete("/api/users/"+s).then(e=>{this.messagesStore=e.data,this.getUsers()})}}});export{i as u};
